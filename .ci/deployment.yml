---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kube-app-yml
  namespace: {{ namespace }}
data:
  application.yml: |
    management.server.port: 9090
  tmp.txt: 'Hello!\n'


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-st1
  namespace: {{ namespace }}
  labels:
    app: kube
    stand: st1
spec:
  replicas: {{ scale }}
  selector:
    matchLabels:
      app: kube
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kube
        stand: st1
        now: '{{ range(1000) | random }}'
    spec:
      volumes:
        - name: config
          configMap:
            name: kube-app-yml
      containers:
        - name: 'main'
          image: 'kube:latest'
          imagePullPolicy: Never
          env:
            - name: JAVA_OPTS
              value: '-Xmx128m -Dspring.config.additional-location=/etc/kube/application.yml'
          volumeMounts:
            - name: config
              mountPath: '/etc/kube'
              readOnly: true
          readinessProbe:
            httpGet:
              path: '/actuator/health'
              port: 9090
            initialDelaySeconds: 4
            failureThreshold: 2
            periodSeconds: 10
          ports:
            - containerPort: 8080
              protocol: TCP
          resources:
            limits:
              memory: "256Mi"
              cpu: "200m"
            requests:
              memory: "128Mi"
              cpu: "100m"


---
apiVersion: v1
kind: Service
metadata:
  name: kube-service
  namespace: {{ namespace }}
spec:
  type: NodePort
  selector:
    app: kube
  ports:
    - name: main
      protocol: TCP
      port: 80
      targetPort: 8080


---
apiVersion: v1
kind: Service
metadata:
  name: kube-service-management
  namespace: {{ namespace }}
spec:
  type: NodePort
  selector:
    app: kube
  ports:
    - name: main
      protocol: TCP
      port: 80
      targetPort: 9090


---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kube-ingress
  namespace: {{ namespace }}
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
    - host: kube.local
      http:
        paths:
          - path: /(.*)
            pathType: Prefix
            backend:
              service:
                name: kube-service
                port:
                  number: 80


---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kube-ingress-management
  namespace: {{ namespace }}
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /actuator/$1
spec:
  rules:
    - host: kube.local
      http:
        paths:
          - path: /paymets/(.*)
            pathType: Prefix
            backend:
              service:
                name: kube-service-management
                port:
                  number: 80
